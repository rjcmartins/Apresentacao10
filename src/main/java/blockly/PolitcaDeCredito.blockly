<?xml version="1.0" encoding="UTF-8"?><blockly audit="false" blocklyType="JAVA" bpmnAble="false" formTarget="" library="false" resourceType="JAVA" ruleDescription="PolitcaDeCredito" ruleName="PolitcaDeCredito" ruleSynchronous="false" ruleTimeout="300" ruleType="I" soap="false" swagger="false">
  <metadata scale="1" scrollx="422.9000000000001" scrolly="-108.60000000000025" target="?XG:!RL(#KP=WnQIsKbQ"/>
  <block asynccall="false" colour="#fca03b" datasourcetype="" id="?XG:!RL(#KP=WnQIsKbQ" origintype="procedures_defreturn" output="false" tooltip="Cria uma função que possui um valor de retorno." type="procedures_defreturn" x="-262" y="218">
    <field customattributes="" name="NAME">faça algo</field>
    <statement name="STACK">
      <block asynccall="false" colour="#0088ee" datasourcetype="" dependencyby="?XG:!RL(#KP=WnQIsKbQ" id="b{ks[=NQ9jv,A#KgeA+]" origintype="variables_set" output="false" tooltip="Define esta variável para o valor da entrada." type="variables_set">
        <field customattributes="" name="VAR">item</field>
        <value name="VALUE">
          <block asynccall="false" colour="#fca03b" datasourcetype="" dependencyby="?XG:!RL(#KP=WnQIsKbQ" id="fZw5lAN|#Mx[i=)+DamX" origintype="procedures_callreturn" output="true" tooltip="Executa a função definida pelo usuário &quot;ConsultaCPF&quot; e usa seu retorno." type="procedures_callreturn">
            <mutation name="ConsultaCPF" return-raw-type="undefined">
              <arg cronapi-raw-type="undefined" cronapi-type="undefined" name="CPF"/>
            </mutation>
            <value name="ARG0">
              <block asynccall="false" colour="#5ba593" datasourcetype="" dependencyby="?XG:!RL(#KP=WnQIsKbQ" id="auk7/tUl3.nCeInw(th4" origintype="text" output="true" tooltip="function () { [native code] }" type="text">
                <field customattributes="" name="TEXT"/>
              </block>
            </value>
          </block>
        </value>
      </block>
    </statement>
  </block>
  <block asynccall="false" colour="#995ba5" datasourcetype="" id="Anb:u5+^,0vLkL9QIqn5" origintype="procedures_defreturn" output="false" tooltip="Cria uma função que possui um valor de retorno." type="procedures_defreturn" x="-242" y="288">
    <mutation>
      <arg id="6bef88d0" name="CPF"/>
    </mutation>
    <field customattributes="" name="NAME">ConsultaCPF</field>
    <comment h="80" pinned="false" w="160">PolitcaDeCredito</comment>
    <statement name="STACK">
      <block asynccall="false" colour="#934848" datasourcetype="" dependencyby="Anb:u5+^,0vLkL9QIqn5" id="=4BUK$/n.lxMQD1o7lfQ" multilayer="true" namespace="cronapi.screen.notify" origintype="notify_type" output="false" returntype="ObjectType.VOID" tooltip="%3Cdiv%20class=%22name%22%3E%3Cstrong%3ENome:%3C/strong%3E%3Cdiv%3EExibe%20notifica%C3%A7%C3%A3o%3C/div%3E%3C/div%3E%3Cdiv%20class=%22description%22%3E%3Cstrong%3EDescri%C3%A7%C3%A3o:%3C/strong%3E%3Cdiv%3EFun%C3%A7%C3%A3o%20que%20exibe%20notifica%C3%A7%C3%A3o%3C/div%3E%3C/div%3E%3Cdiv%20class=%22params%22%3E%3Cstrong%3EParam%C3%AAtro:%3C/strong%3E%3Cdiv%3E%3Cspan%3E%20-%20Tipo%20da%20notifica%C3%A7%C3%A3o%20:%20Texto%3C/span%3E%3Cdiv%3E%20pode%20ser%20success,%20error,%20warning,%20info%20ou%20primary%3C/div%3E%3Cspan%3E%20-%20Mensagem%20:%20Texto%3C/span%3E%3Cdiv%3E%20Mensagem%20ou%20conte%C3%BAdo%20html%20a%20ser%20exibido%3C/div%3E%3C/div%3E%3C/div%3E%3Cdiv%20class=%22link%22%3E%3Cstrong%3EAjuda:%3C/strong%3E%3Cdiv%20class=%22tooltip-link%22%3E%3Ca%20target=%22_blank%22%20href=%22https://ide.cronapp.io/help?type=blockly&amp;amp;id=cronapi.screen.notify%22%3EAjuda%3C/a%3E%3C/div%3E%3C/div%3E" type="notify_type">
        <mutation name="{{cronapi.screen.notify}}" value="[object Object]"/>
        <field customattributes="" name="SELECT">success</field>
        <value name="MESSAGE">
          <shadow asynccall="false" colour="#5ba593" datasourcetype="" dependencyby="Anb:u5+^,0vLkL9QIqn5" id="(Kt#84*n!9UCBwdAR^Dw" origintype="text" output="true" tooltip="function () { [native code] }" type="text">
            <field customattributes="" name="TEXT">CPF Valido</field>
          </shadow>
        </value>
      </block>
    </statement>
  </block>
</blockly>
